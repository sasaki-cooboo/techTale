import Head from "next/head";
import Layout from "@/features/jobs/Layout";
import SearchContents from "@/features/jobs/SearchContents";
import { GetServerSideProps } from "next";
import fetch from "@/libs/fetch";
import { JobAttributesType, JobListResponse } from "@/features/jobs/job.type";
import Loading from "@/components/Loading";
import { useAtomValue } from "jotai";
import { jobAtom, loadingAtom } from "@/atoms/atoms";
import { Typography } from "@mui/material";
import { useHydrateAtoms } from "jotai/utils";

type Props = {
  jobAttributes: JobAttributesType;
  jobs: JobListResponse;
};

export default function Search({ jobAttributes, jobs }: Props) {
  const isLoading = useAtomValue(loadingAtom);
  useHydrateAtoms([[jobAtom, jobs]]);
  return (
    <>
      <Head>
        <title>エンジニア求人サイト</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <Layout jobAttributes={jobAttributes}>
          <Typography fontSize={24} mb={2} fontWeight={500} variant="h2">
            求人・開発案件一覧
          </Typography>
          <SearchContents />
        </Layout>
      </div>
      <Loading open={isLoading} />
    </>
  );
}

/**
 * getServerSideProps
 */
export const getServerSideProps: GetServerSideProps = async () => {
  try {
    const { data: jobAttributes } = await fetch.get<JobAttributesType>(
      `/api/v1/jobAttributes`
    );
    const { data: jobs } = await fetch.get<JobListResponse>(`/api/v1/jobs`);
    return {
      props: {
        jobAttributes,
        jobs,
      },
    };
  } catch (error) {
    return {
      notFound: true,
    };
  }
};
