import Head from "next/head";
import { GetServerSideProps } from "next";
import fetch from "@/libs/fetch";
import { JobDetailResponse } from "@/features/jobs/job.type";
import { useEffect } from "react";
import Loading from "@/components/Loading";
import { useAtom, useSetAtom } from "jotai";
import { jobDetailAtom, loadingAtom } from "@/atoms/atoms";
import DetailContentsWrap from "@/features/jobs/detail/DetailContentsWrap";
import { useRouter } from "next/router";

export default function Detail({ id }: { id: string }) {
  const [isLoading, setIsLoading] = useAtom(loadingAtom);
  const setDetail = useSetAtom(jobDetailAtom);
  const router = useRouter();
  useEffect(() => {
    setIsLoading(true);
    fetch
      .get<JobDetailResponse>(`/api/v1/job/${id}`)
      .then((res) => {
        setDetail(res.data);
      })
      .catch(() => {
        // 該当の案件がない場合、404ページにリダイレクト
        router.replace("/404.html");
      })
      .finally(() => {
        setIsLoading(false);
      });
  }, [id, setDetail, setIsLoading, router]);
  return (
    <>
      <Head>
        <title>エンジニア求人サイト</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <DetailContentsWrap />
      <Loading open={isLoading} />
    </>
  );
}

/**
 * getServerSideProps
 */
export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  if (typeof query?.id !== "string" || !query.id) {
    return {
      notFound: true,
    };
  }
  return {
    props: {
      id: query.id,
    },
  };
};
